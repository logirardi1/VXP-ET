#  Code generated by Chatgpt
import unittest
from coffee_machine import CoffeeMachine


class TestCoffeeMachine(unittest.TestCase):

    def setUp(self):
        self.machine = CoffeeMachine()

    def test_initial_state(self):
        self.assertEqual(self.machine.water, 1000)
        self.assertEqual(self.machine.milk, 1000)
        self.assertEqual(self.machine.coffee, 1000)
        self.assertEqual(self.machine.money, 0)

    def test_pour_water(self):
        self.machine.pour_water(500)
        self.assertEqual(self.machine.water, 1500)  # 1000 + 500

    def test_pour_milk(self):
        self.machine.pour_milk(200)
        self.assertEqual(self.machine.milk, 1200)  # 1000 + 200

    def test_pour_coffee(self):
        self.machine.pour_coffee(100)
        self.assertEqual(self.machine.coffee, 1100)  # 1000 + 100

    def test_insert_coin(self):
        self.machine.insert_coin(1, 2, 3, 4)
        self.assertEqual(self.machine.money, 1*0.1 + 2*0.5 + 3*0.10 + 4*0.25)

    def test_withdraw_resources(self):
        self.machine.insert_coin(1, 2, 3, 4)
        self.assertTrue(self.machine._withdraw_resources("espresso"))

    def test_print_report(self):
        pass  # Não é muito fácil testar saída de impressão

    def test_turn_on(self):
        pass  # Testar interação com o usuário pode ser complicado

if __name__ == '__main__':
    unittest.main()
